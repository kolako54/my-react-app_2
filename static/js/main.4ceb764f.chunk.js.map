{"version":3,"sources":["assets/Logo.svg","assets/aiside.svg","components/Logo/title/title.component.jsx","components/Logo/logo.component.jsx","components/aisidelogo/aisidelogo.component.jsx","components/buttons/button.component.jsx","components/inputs/inputs.component.jsx","components/Cart/cart.component.jsx","components/steps/steps.component.jsx","components/Stepone-signup-inputs/Stepone-signup-inputs.component.jsx","pages/signUpStepOne/signUpStepOne.component.jsx","components/twotitr/twotitr.component.jsx","components/box-item/box-item.component.jsx","components/checkbtns/checkbtns.component.jsx","pages/signUpStepTwo/signUpStepTwo.componentt.jsx","pages/signUpStepThree/signUpStepThree.component.jsx","pages/signUpStepFour/signUpStepFour.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","className","IconLogo","src","Logo","alt","SideLogo","LogoSide","Buttons","props","children","Inputs","useState","passwordInput","setPasswordInput","textInput","setTextInput","method","type","placeholder","onChange","sometext","value","target","to","CartLogin","withRouter","pageNumber","match","path","split","console","log","isChecked","setChecked","handleRadio","check","name","onSubmit","event","preventDefault","checked","id","style","width","margin","signUpStepOne","step","TwoTitr","BoxItem","borderColor1","setBorderColor1","borderColor2","setBorderColor2","borderColor3","setBorderColor3","onClick","e","CheckBtns","SignUpStepTwo","ThreeStep","SignUpStepFour","App","component","SignUpStepOne","FourStep","exact","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ceb764f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.358cf17e.svg\";","module.exports = __webpack_public_path__ + \"static/media/aiside.80b42e97.svg\";","import React from 'react'\r\nimport './title.style.scss'\r\n\r\nconst Title = () => (\r\n  <div className=\"titr\">\r\n    <h4>روستا مارکت</h4>\r\n    <p>بستر یکپارچه ارائه خدمات کشاورزی</p>\r\n    <p>ارائه دهنده خدمات یکپارچه</p>\r\n  </div>\r\n);\r\nexport default Title","import React from \"react\";\r\nimport Logo from \"../../assets/Logo.svg\";\r\nimport \"./logo.style.scss\";\r\nimport Title from \"./title/title.component\";\r\n\r\nconst IconLogo = () => {\r\n  return (\r\n    <>\r\n      <div className=\"logo\">\r\n        <img src={Logo} alt=\"logo\" />\r\n        <Title />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default IconLogo;\r\n","import React from \"react\";\r\nimport LogoSide from \"../../assets/aiside.svg\";\r\nimport './aisidelogo.style.scss'\r\nconst SideLogo = () => (\r\n  <div>\r\n    <img className=\"sidelogo\" src={LogoSide} alt=\"sidelogo\" />\r\n  </div>\r\n);\r\nexport default SideLogo","import React from 'react'\r\nimport './button.style.scss'\r\n\r\n\r\nconst Buttons = (props) => (\r\n  <div>\r\n    <button className=\"button\">{props.children}</button>\r\n  </div>\r\n);\r\nexport default Buttons","import React, { useState } from \"react\";\r\nimport Button from \"../buttons/button.component\";\r\nimport \"./input.style.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Inputs = () => {\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [textInput, setTextInput] = useState(\"\");\r\n  const handleChange = (sometext) => {\r\n    const value = sometext.target.value;\r\n    setTextInput(value);\r\n  };\r\n  const handleUser = (sometext) => {\r\n    const value = sometext.target.value;\r\n    setPasswordInput(value);\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <form method=\"post\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"نام کاربری\"\r\n          onChange={handleChange}\r\n          value={textInput}\r\n        />\r\n      </form>\r\n      <form method=\"post\">\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"رمز عبور\"\r\n          onChange={handleUser}\r\n          value={passwordInput}\r\n        />\r\n      </form>\r\n      <div className=\"containerBtn\">\r\n        <Button className=\"btn\">ورود</Button>\r\n        <Link to=\"/sign-up/step-1\">\r\n          <Button className=\"btn\">ثبت نام</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inputs;\r\n","import React from \"react\";\r\nimport \"./cart.style.css\";\r\nimport Logo from \"../Logo/logo.component\";\r\nimport SideLogo from \"../aisidelogo/aisidelogo.component\";\r\nimport Inputs from '../inputs/inputs.component'\r\n\r\n\r\nconst CartLogin = () => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"cart\">\r\n        <Logo />\r\n        <SideLogo />\r\n        <Inputs />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartLogin;\r\n","import React from \"react\";\r\nimport \"./steps.style.scss\";\r\nimport {withRouter} from \"react-router-dom\"\r\nconst Steps = ({match}) => {\r\nconst {path} = match;\r\nconst pageNumber = path.split(\"/\")[2];\r\nconsole.log(pageNumber);\r\n\r\n  return (\r\n    <div className=\"steps\">\r\n      <div className={`step ${pageNumber === \"step-1\" ? \"step-1\" : null}`}>\r\n        <p> اطلاعات شخصی </p>\r\n      </div>\r\n      <div className={`step ${pageNumber === \"step-2\" ? \"step-2\" : null}`}>\r\n        <p> اطلاعات شغلی </p>\r\n      </div>\r\n      <div className={`step ${pageNumber === \"step-3\" ? \"step-3\" : null}`}>\r\n        <p> اطلاعات حقوقی </p>\r\n      </div>\r\n      <div className={`step ${pageNumber === \"step-4\" ? \"step-4\" : null}`}>\r\n        <p> تایید نهایی </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default withRouter(Steps);\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"./Stepone-signup-inputs.style.scss\";\r\nimport {Link, withRouter} from \"react-router-dom\"\r\n\r\nconst InputsStepOne = ({match}) => {\r\n  \r\n  const [isChecked, setChecked] = useState(\"apple\");\r\n  const submitHandle = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  const handleRadio = (check) => {\r\n    setChecked(([check.target.name] = check.target.value));\r\n  };\r\n  return (\r\n    <form className=\"container-input\" onSubmit={submitHandle}>\r\n  \r\n      <div className=\"form-field\">\r\n        <p> نام </p>\r\n\r\n        <input type=\"text\" />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> نام خانوادگی </p>\r\n        <input type=\"text\" />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> کد ملی </p>\r\n        <input type=\"number\" />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> ایمیل </p>\r\n        <input type=\"email\" />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> جنسیت </p>\r\n        <div className=\"container-radio\">\r\n          <input\r\n            type=\"radio\"\r\n            onChange={handleRadio}\r\n            name=\"radio1\"\r\n            value=\"orange\"\r\n            checked={isChecked === \"orange\"}\r\n          />\r\n          <p>مرد</p>\r\n          <input\r\n            type=\"radio\"\r\n            onChange={handleRadio}\r\n            name=\"radio1\"\r\n            value=\"apple\"\r\n            checked={isChecked === \"apple\"}\r\n          />\r\n          <p>زن</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p>تاریخ تولد</p>\r\n        <div className=\"container-date\">\r\n          <div className=\"subdate\">\r\n            <p> روز</p>\r\n            <input type=\"text\" />\r\n          </div>\r\n          <div className=\"subdate\">\r\n            <p> ماه</p>\r\n            <input type=\"text\" />\r\n          </div>\r\n          <div className=\"subdate\">\r\n            <p> سال</p>\r\n            <input type=\"text\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> انتخاب استان </p>\r\n        <select id=\"ostan\">\r\n          <option value=\"mashad\">خراسان رضوی</option>\r\n          <option value=\"tehran\">تهران</option>\r\n          <option value=\"esfahan\">فارس</option>\r\n          <option value=\"shiraz\">خوزستان</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> انتخاب شهرستان </p>\r\n        <select id=\"ostan\">\r\n          <option value=\"mashad\">قم</option>\r\n          <option value=\"tehran\">نیشابور</option>\r\n          <option value=\"esfahan\">ارومیه</option>\r\n          <option value=\"shiraz\">اردبیل</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> آدرس </p>\r\n        <textarea />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p> کد پستی </p>\r\n        <input type=\"number\" />\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p>تلفن ثابت</p>\r\n        <div className=\"tel-container\">\r\n          <input type=\"text\" />\r\n          <input type=\"number\" style={{ width: \"50px\" }} />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <p>تلفن همراه</p>\r\n        <div className=\"tel-container\">\r\n          <input type=\"text\" />\r\n          <input type=\"number\" style={{ width: \"50px\" }} />\r\n          <input type=\"submit\" value=\"ویرایش\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-field\">\r\n        <Link to=\"./step-2\" style={{ margin: \"auto\" }}>\r\n          <button>مرحله بعد</button>\r\n        </Link>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default withRouter(InputsStepOne);\r\n","import React from 'react'\r\nimport Steps from '../../components/steps/steps.component'\r\nimport './signUpStepOne.style.scss'\r\nimport InputsStepOne from '../../components/Stepone-signup-inputs/Stepone-signup-inputs.component'\r\nimport Logo from \"../../components/Logo/logo.component\";\r\n\r\n\r\nconst signUpStepOne = () => {\r\n    return <div className=\"container-signup\">\r\n    <Logo className=\"logo\"/>\r\n        <Steps step=\"step-1\"/>\r\n        <InputsStepOne/>\r\n     \r\n\r\n    </div>;\r\n};\r\nexport default signUpStepOne","import React from \"react\";\r\nimport './twotitr.style.scss'\r\n\r\nconst TwoTitr = () => {\r\n  return (\r\n    <div className=\"twotitr\">\r\n      <h2>نـــــوع فعـــــالیت</h2>\r\n      <p>در این مرحله میتوانید چندین گزینه رو فعال کنید</p>\r\n    </div>\r\n  );\r\n};\r\nexport default TwoTitr;\r\n","import React, { useState } from \"react\";\r\nimport \"./box-item.style.scss\";\r\nconst BoxItem = () => {\r\n  const [borderColor1, setBorderColor1] = useState(\"fill-border1\");\r\n  const [borderColor2, setBorderColor2] = useState(\"\");\r\n    const [borderColor3, setBorderColor3] = useState(\"\");\r\n  const handleBox1 = (e) => {\r\n    setBorderColor1(\"fill-border1\");\r\n     setBorderColor2(\"\");\r\n       setBorderColor3(\"\");\r\n  };\r\n  const handleBox2 = (e) => {\r\n    setBorderColor2(\"fill-border2\");\r\n    setBorderColor1(\"\");\r\n      setBorderColor3(\"\");\r\n  };\r\n   const handleBox3 = (e) => {\r\n     setBorderColor3(\"fill-border3\");\r\n     setBorderColor1(\"\");\r\n     setBorderColor2(\"\");\r\n   };\r\n  return (\r\n    <div className=\"box-container\">\r\n      <div className={`box ${borderColor1}`} onClick={handleBox1}>\r\n        کشاورز\r\n      </div>\r\n      <div className={`box ${borderColor2}`} onClick={handleBox2}>\r\n        جویای کار\r\n      </div>\r\n      <div\r\n        className={`box ${borderColor3}`}\r\n        onClick={handleBox3}\r\n      >\r\n        فلان و بهمان\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BoxItem;\r\n","import React from 'react'\r\nimport './checkbtns.style.scss'\r\nconst CheckBtns = () => {\r\n    return (\r\n      <div className=\"checkbtns-container\">\r\n        <label>\r\n          <input type=\"checkbox\" />\r\n          دامدار\r\n        </label>\r\n        <label>\r\n          <input type=\"checkbox\" />\r\n          باغبان\r\n        </label>\r\n        <label>\r\n          <input type=\"checkbox\" />\r\n          زارع\r\n        </label>\r\n      </div>\r\n    );\r\n}\r\nexport default CheckBtns","import React from \"react\";\r\nimport \"./signUpStepTwo.style.scss\";\r\nimport Logo from \"../../components/Logo/logo.component\";\r\nimport Steps from \"../../components/steps/steps.component\";\r\nimport TwoTitr from \"../../components/twotitr/twotitr.component\";\r\nimport BoxItem from \"../../components/box-item/box-item.component\";\r\nimport CheckBtns from \"../../components/checkbtns/checkbtns.component\";\r\nimport { Link } from \"react-router-dom\";\r\nconst SignUpStepTwo = () => {\r\n  return (\r\n    <div className=\"containers\">\r\n      <div className=\"steptwo-container\">\r\n        <Logo className=\"logo\" />\r\n        <Steps />\r\n        <TwoTitr />\r\n        <BoxItem />\r\n        <CheckBtns />\r\n        <div className=\"btn-container\">\r\n          <Link to=\"/sign-up/step-1\">\r\n            <button>مرحله قبل</button>\r\n          </Link>\r\n          <Link to=\"/sign-up/step-3\">\r\n            <button>مرحله بعد</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUpStepTwo;\r\n","import React from \"react\";\r\nimport \"./signUpStepThree.style.scss\";\r\nimport Steps from \"../../components/steps/steps.component\";\r\nimport Logo from \"../../components/Logo/logo.component\";\r\nimport {Link} from 'react-router-dom'\r\nconst ThreeStep = () => {\r\n  return (\r\n    <div className=\"Container\">\r\n      <div className=\"threeStep\">\r\n        <Logo className=\"logo\" />\r\n        <Steps />\r\n        <div className=\"inputThree\">\r\n          <p className=\"ptext\">شماره حساب</p>\r\n          <form method=\"get\">\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n            <input type=\"text\" />\r\n          </form>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <Link to=\"/sign-up/step-2\">\r\n            <button>مرحله قبل</button>\r\n          </Link>\r\n          <Link to=\"/sign-up/step-4\">\r\n            <button>مرحله بعد</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ThreeStep;\r\n","import React from \"react\";\r\nimport \"./signUpStepFour.style.scss\";\r\nimport Steps from \"../../components/steps/steps.component\";\r\nimport Logo from \"../../components/Logo/logo.component\";\r\nimport {Link} from 'react-router-dom'\r\nconst SignUpStepFour = () => {\r\n  return (\r\n    <div className=\"final-container\">\r\n      <div className=\"final\">\r\n        <Logo className=\"logo\" />\r\n        <Steps />\r\n        <div className=\"rules\">\r\n          <div>\r\n            {\" \"}\r\n            <input type=\"checkbox\" />\r\n            <span>با قوانین و مقررات سایت موافقم</span>\r\n          </div>\r\n\r\n          <div>\r\n            <u>\r\n              <i>مشاهده قوانین</i>\r\n            </u>\r\n          </div>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <Link to=\"/sign-up/step-3\">\r\n            <button>مرحله قبل</button>\r\n          </Link>\r\n          <Link to=\"/\">\r\n            <button>تایید نهایی</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUpStepFour;\r\n","import React, { Component } from \"react\";\nimport CartLogin from \"./components/Cart/cart.component\";\nimport \"./App.css\";\nimport {Route, Switch} from \"react-router-dom\"\nimport SignUpStepOne from './pages/signUpStepOne/signUpStepOne.component'\nimport SignUpStepTwo from './pages/signUpStepTwo/signUpStepTwo.componentt'\nimport ThreeStep from './pages/signUpStepThree/signUpStepThree.component'\nimport FourStep from './pages/signUpStepFour/signUpStepFour.component'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/sign-up/step-1\" component={SignUpStepOne} />\n          <Route path=\"/sign-up/step-2\" component={SignUpStepTwo} />\n          <Route path=\"/sign-up/step-3\" component={ThreeStep} />\n          <Route path=\"/sign-up/step-4\" component={FourStep} />\n\n          <Route exact path=\"/\" component={CartLogin} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}